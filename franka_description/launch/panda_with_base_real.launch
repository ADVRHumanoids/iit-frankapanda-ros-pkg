<?xml version="1.0" ?>
<launch>
  <arg name="robot_ip" />
  <arg name="arm_id" default="panda" />
  <arg name="use_gripper" default="true" />
  <arg name="controller"  default=""     doc="Which example controller should be started? (One of {cartesian_impedance,model,force,joint_position,joint_velocity}_example_controller)" />
  <arg name="x"           default="0"     doc="How far forward to place the base of the robot in [m]?" />
  <arg name="y"           default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
  <arg name="z"           default="0"     doc="How far upwards to place the base of the robot in [m]?" />
  <arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
  <arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
  <arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
  <arg name="interactive_marker"      default="false" />
  <arg name="xacro_args" default="" />

  <param name="robot_description" 
    command="$(find xacro)/xacro $(find franka_description)/robots/panda/panda_with_base.urdf.xacro
        gazebo:=false 
        hand:=$(arg use_gripper) 
        arm_id:=$(arg arm_id) 
        xyz:='$(arg x) $(arg y) $(arg z)'
        rpy:='$(arg roll) $(arg pitch) $(arg yaw)'
        $(arg xacro_args)"/>

 <!-- The semantic description that corresponds to the URDF -->
  <param name="robot_description_semantic" 
      command="xacro '$(find panda_moveit_config)/config/panda.srdf.xacro' hand:=$(arg use_gripper) arm_id:=$(arg arm_id)" />

  <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg use_gripper)">
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="arm_id"   value="$(arg arm_id)" />
  </include>

  <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
    <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" subst_value="true" />
    <param name="robot_ip" value="$(arg robot_ip)" />
  </node>

  <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg use_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg use_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>

  <group if="$(arg controller)" />
    <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" subst_value="true" />
    <!-- <rosparam command="load" file="$(find franka_example_controllers)/config/franka_example_controllers.yaml" subst_value="true" /> -->
    <rosparam command="load" file="$(find franka_description)/config/panda_controllers.yaml" subst_value="true" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="$(arg controller)"/>
  </group>

  <node name="interactive_marker"
        pkg="franka_example_controllers"
        type="interactive_marker.py"
        if="$(arg interactive_marker)">
    <param name="link_name" value="$(arg arm_id)_link0" />
    <!-- <remap to="$(arg controller)/equilibrium_pose" from="equilibrium_pose" /> -->
  </node>
</launch>